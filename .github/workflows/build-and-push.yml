name: Build and Push Docker Image

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install essential utilities
        run: |
          sudo apt-get update
          sudo apt-get install -y wget
      # Restore cache before installing dependencies
      - name: Cache Node.js modules
        id: yarn-cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.yarn/cache
            node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      #  installing dependencies if no cache
      - name: Install dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install
      # Save the cache after dependencies have been installed
      - name: Cache Node.js modules
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        uses: actions/cache@v3
        with:
          path: |
            ~/.yarn/cache
            node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

       # Restore the cache before downloading Android SDK components
      - name: Restore Android SDK cache
        id: sdk-cache
        uses: actions/cache@v3
        with:
          path: ${{ runner.tool_cache }}/android-sdk
          key: ${{ runner.os }}-android-sdk
      # setting up Android SDK Tools if no cache
      - name: Setup Android SDK Tools
        if: steps.sdk-cache.outputs.cache-hit != 'true'
        uses: android-actions/setup-android@v3.2.1
      # Save the cache after setting up Android SDK Tools
      - name: Cache Android SDK
        if: steps.sdk-cache.outputs.cache-hit != 'true'
        uses: actions/cache@v3
        with:
          path: ${{ runner.tool_cache }}/android-sdk
          key: ${{ runner.os }}-android-sdk

      - name: Grant execution permissions for Gradle wrapper
        run: sudo chmod +x ./android/gradlew

      - name: Create gradlew wrapper script
        run: |
          cd android
          echo '#!/bin/bash' > run_gradlew.sh
          echo 'export PATH=/usr/bin:$PATH' >> run_gradlew.sh
          echo './gradlew "$@"' >> run_gradlew.sh
          chmod +x run_gradlew.sh
          
      - name: Build React Native app
        run: |
          cd android
          ./run_gradlew.sh assembleRelease

      - name: Archive APK
        uses: actions/upload-artifact@v3
        with:
          name: app-release.apk 
          path: android/app/build/outputs/apk/release/app-release.apk


      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/reactnative:emptyApp_cache_fixed

      - name: Logout from Docker Hub
        run: docker logout
